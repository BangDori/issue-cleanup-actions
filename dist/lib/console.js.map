{
  "version": 3,
  "sources": ["../../src/lib/console.ts"],
  "sourcesContent": ["import { IssueClassification } from \"../github/type/types\";\n\n/**\n * Generate summary report from classified issues\n */\nexport function generateReport(\n  creators: string[],\n  classification: IssueClassification\n): string {\n  const { completed, inProgress, pending } = classification;\n  const totalIssues = completed.length + inProgress.length + pending.length;\n\n  const creatorText = creators.length === 1 ? creators[0] : creators.join(\", \");\n  let message = `Issue Status Report by ${creatorText} (Total: ${totalIssues})\\n\\n`;\n\n  if (completed.length > 0) {\n    message += `Completed (${completed.length})\\n`;\n    message +=\n      completed\n        .map(\n          (issue) =>\n            `   \u2022 Issue #${issue.number}. ${issue.title} (@${\n              issue.user?.login || \"unknown\"\n            })`\n        )\n        .join(\"\\n\") + \"\\n\\n\";\n  }\n\n  if (inProgress.length > 0) {\n    message += `In Progress (${inProgress.length})\\n`;\n    message +=\n      inProgress\n        .map(\n          (issue) =>\n            `   \u2022 Issue #${issue.number}. ${issue.title} (@${\n              issue.user?.login || \"unknown\"\n            })`\n        )\n        .join(\"\\n\") + \"\\n\\n\";\n  }\n\n  if (pending.length > 0) {\n    message += `Pending (${pending.length})\\n`;\n    message += pending\n      .map(\n        (issue) =>\n          `   \u2022 Issue #${issue.number}. ${issue.title} (@${\n            issue.user?.login || \"unknown\"\n          })`\n      )\n      .join(\"\\n\");\n  }\n\n  if (completed.length > 0) {\n    message += \"\\n\\n\uD83E\uDD73 Closed all completed issues!\";\n  }\n\n  console.log(message);\n  return message;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKO,SAAS,eACd,UACA,gBACQ;AACR,QAAM,EAAE,WAAW,YAAY,QAAQ,IAAI;AAC3C,QAAM,cAAc,UAAU,SAAS,WAAW,SAAS,QAAQ;AAEnE,QAAM,cAAc,SAAS,WAAW,IAAI,SAAS,CAAC,IAAI,SAAS,KAAK,IAAI;AAC5E,MAAI,UAAU,0BAA0B,WAAW,YAAY,WAAW;AAAA;AAAA;AAE1E,MAAI,UAAU,SAAS,GAAG;AACxB,eAAW,cAAc,UAAU,MAAM;AAAA;AACzC,eACE,UACG;AAAA,MACC,CAAC,UACC,oBAAe,MAAM,MAAM,KAAK,MAAM,KAAK,MACzC,MAAM,MAAM,SAAS,SACvB;AAAA,IACJ,EACC,KAAK,IAAI,IAAI;AAAA,EACpB;AAEA,MAAI,WAAW,SAAS,GAAG;AACzB,eAAW,gBAAgB,WAAW,MAAM;AAAA;AAC5C,eACE,WACG;AAAA,MACC,CAAC,UACC,oBAAe,MAAM,MAAM,KAAK,MAAM,KAAK,MACzC,MAAM,MAAM,SAAS,SACvB;AAAA,IACJ,EACC,KAAK,IAAI,IAAI;AAAA,EACpB;AAEA,MAAI,QAAQ,SAAS,GAAG;AACtB,eAAW,YAAY,QAAQ,MAAM;AAAA;AACrC,eAAW,QACR;AAAA,MACC,CAAC,UACC,oBAAe,MAAM,MAAM,KAAK,MAAM,KAAK,MACzC,MAAM,MAAM,SAAS,SACvB;AAAA,IACJ,EACC,KAAK,IAAI;AAAA,EACd;AAEA,MAAI,UAAU,SAAS,GAAG;AACxB,eAAW;AAAA,EACb;AAEA,UAAQ,IAAI,OAAO;AACnB,SAAO;AACT;",
  "names": []
}
