{
  "version": 3,
  "sources": ["../../../src/github/issue/issue-label-filter.ts"],
  "sourcesContent": ["import { Issue } from \"../type/types\";\n\n/**\n * Filter issues by target labels\n * If no labels are specified, returns all issues\n * If labels are specified, returns only issues that have at least one of the specified labels\n */\nexport function filterIssuesByLabels(\n  issues: Issue[],\n  targetLabels: string[]\n): Issue[] {\n  // If no labels specified, return all issues\n  if (targetLabels.length === 0) {\n    console.log(\"Skipping label filtering. Processing all issues.\");\n    return issues;\n  }\n\n  console.log(\n    `Filtering to issues with labels: ${targetLabels.join(\", \")}`\n  );\n\n  // Filter issues that have at least one of the target labels\n  return issues.filter((issue) => {\n    if (!issue.labels || issue.labels.length === 0) {\n      return false;\n    }\n\n    const issueLabels = issue.labels.map((label) =>\n      typeof label === \"string\" ? label : label.name\n    );\n\n    return targetLabels.some((targetLabel) =>\n      issueLabels.includes(targetLabel)\n    );\n  });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOO,SAAS,qBACd,QACA,cACS;AAET,MAAI,aAAa,WAAW,GAAG;AAC7B,YAAQ,IAAI,kDAAkD;AAC9D,WAAO;AAAA,EACT;AAEA,UAAQ;AAAA,IACN,oCAAoC,aAAa,KAAK,IAAI,CAAC;AAAA,EAC7D;AAGA,SAAO,OAAO,OAAO,CAAC,UAAU;AAC9B,QAAI,CAAC,MAAM,UAAU,MAAM,OAAO,WAAW,GAAG;AAC9C,aAAO;AAAA,IACT;AAEA,UAAM,cAAc,MAAM,OAAO;AAAA,MAAI,CAAC,UACpC,OAAO,UAAU,WAAW,QAAQ,MAAM;AAAA,IAC5C;AAEA,WAAO,aAAa;AAAA,MAAK,CAAC,gBACxB,YAAY,SAAS,WAAW;AAAA,IAClC;AAAA,EACF,CAAC;AACH;",
  "names": []
}
