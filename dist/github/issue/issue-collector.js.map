{
  "version": 3,
  "sources": ["../../../src/github/issue/issue-collector.ts"],
  "sourcesContent": ["import { Octokit, RepoContext } from \"../type/types\";\n\n/**\n * Collect all open issues from specified creators\n * @param octokit - GitHub API client\n * @param context - Repository context\n * @param creators - Array of creator usernames to filter by\n * @returns Array of issues from specified creators\n */\nexport async function collectIssuesFromCreators(\n  octokit: Octokit,\n  context: RepoContext,\n  creators: string[]\n): Promise<any[]> {\n  const allIssuesMap = new Map<number, any>();\n\n  for (const creator of creators) {\n    const { data: issues } = await octokit.rest.issues.listForRepo({\n      owner: context.owner,\n      repo: context.repo,\n      state: \"open\",\n      creator: creator,\n    });\n\n    // Add to map to avoid duplicates and filter out PRs\n    for (const issue of issues) {\n      if (!issue.pull_request) {\n        allIssuesMap.set(issue.number, issue);\n      }\n    }\n  }\n\n  return Array.from(allIssuesMap.values());\n}\n\n/**\n * Collect all open issues regardless of creator\n * @param octokit - GitHub API client\n * @param context - Repository context\n * @returns Array of all open issues\n */\nexport async function collectAllIssues(\n  octokit: Octokit,\n  context: RepoContext\n): Promise<any[]> {\n  const { data: issues } = await octokit.rest.issues.listForRepo({\n    owner: context.owner,\n    repo: context.repo,\n    state: \"open\",\n  });\n\n  // Filter out PRs\n  return issues.filter((issue) => !issue.pull_request);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,eAAsB,0BACpB,SACA,SACA,UACgB;AAChB,QAAM,eAAe,oBAAI,IAAiB;AAE1C,aAAW,WAAW,UAAU;AAC9B,UAAM,EAAE,MAAM,OAAO,IAAI,MAAM,QAAQ,KAAK,OAAO,YAAY;AAAA,MAC7D,OAAO,QAAQ;AAAA,MACf,MAAM,QAAQ;AAAA,MACd,OAAO;AAAA,MACP;AAAA,IACF,CAAC;AAGD,eAAW,SAAS,QAAQ;AAC1B,UAAI,CAAC,MAAM,cAAc;AACvB,qBAAa,IAAI,MAAM,QAAQ,KAAK;AAAA,MACtC;AAAA,IACF;AAAA,EACF;AAEA,SAAO,MAAM,KAAK,aAAa,OAAO,CAAC;AACzC;AAQA,eAAsB,iBACpB,SACA,SACgB;AAChB,QAAM,EAAE,MAAM,OAAO,IAAI,MAAM,QAAQ,KAAK,OAAO,YAAY;AAAA,IAC7D,OAAO,QAAQ;AAAA,IACf,MAAM,QAAQ;AAAA,IACd,OAAO;AAAA,EACT,CAAC;AAGD,SAAO,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,YAAY;AACrD;",
  "names": []
}
